<!doctype html>
<html>
  <head>
    <title>High-Dimensional Statistics Project: Image Classification using the SIPaKMeD Dataset</title>
  </head>
  
  <body>
    <h1>High-Dimensional Statistics Project: Image Classification using the SIPaKMeD Dataset</h1>
    
    <p>This code was written in R to analyse the SIPaKMeD dataset for feature and image-based classification of normal and pathological cervical cancer cells in Pap smear images.</p>
    
    <h2>R Code</h2>
    
    <pre>
<code>
# Set a seed to ensure reproducibility
set.seed(2024)

# Load the necessary libraries
library(keras)
library(keras3)
library(EBImage)

# Load and prepare the training data
# Replace with your actual data loading function
train.x <- as.array(train_images)  # Example of loading image data
trainLabels <- to_categorical(train.y)  # Convert labels to categorical (one-hot encoding)

# Define the neural network model
model <- keras_model_sequential() %>%
  layer_dense(units = 256, activation = "relu", input_shape = c(150528)) %>%  # 150528 = 224*224*3
  layer_dense(units = 128, activation = "relu") %>%
  layer_dense(units = 5, activation = "softmax")  # 5 classes for different cell types

# Compile the model
model %>% compile(
  loss = "categorical_crossentropy", 
  optimizer = "adam", 
  metrics = "accuracy"
)

# Fit the model to the training data
model %>% fit(train.x, trainLabels, epochs = 30, batch_size = 32)

# Evaluate the model on the training data
evaluation_result <- model %>% evaluate(train.x, trainLabels)
cat("Evaluation result: ", evaluation_result)
</code>
    </pre>
  </body>
</html>
